#!/usr/bin/env ruby

require 'vantiv'
require 'vantiv/certification/validation_test_runner'
require 'optparse'

options = {}
parser = OptionParser.new do |opts|
  opts.banner = "Usage: vantiv-certify-app -a <acceptor_id> -p <paypage_id> -u <user> -w <password> [--filter_by <test_name>]"

  opts.on("-a", "--acceptor_id ACCEPTOR_ID", "Vantiv Acceptor ID") do |acceptor_id|
    options[:acceptor_id] = acceptor_id
  end

  opts.on("-p", "--paypage_id PAYPAGE_ID", "Vantiv Paypage ID") do |paypage_id|
    options[:paypage_id] = paypage_id
  end

  opts.on("-u", "--user VANTIV_USER", "Vantiv XML User") do |user|
    options[:user] = user
  end

  opts.on("-w", "--password VANTIV_PASSWORD", "Vantiv XML Password") do |password|
    options[:password] = password
  end

  opts.on("--filter_by [TEST_NAME]", "Filter which certifications to run") do |filter|
    options[:filter_by] = filter
  end
end

parser.parse!

required_arguments = %i[acceptor_id paypage_id user password]
missing_arguments = required_arguments.select{ |required_argument| options[required_argument].nil? }

if missing_arguments.any?
  puts "Missing options: #{missing_arguments.join(", ")}"
  puts parser.banner
  exit
end

Vantiv.configure do |config|
  config.license_id = "this-shouldnt-be-used-anymore-because-we-are-using-xml"
  config.acceptor_id = options.fetch(:acceptor_id)
  config.paypage_id = options.fetch(:paypage_id)
  config.environment = Vantiv::Environment::CERTIFICATION

  config.user = options.fetch(:user)
  config.password = options.fetch(:password)

  config.default_report_group = '1'
end

Vantiv::Certification::ValidationTestRunner.run(
  save_to: "certs.txt",
  filter_by: options[:filter_by]
)

%x(open certs.txt)
